'use strict';


//ЗАМЫКАНИЕ - CLOSURE

/**
 * Существует ещё один вариант объявления функции. Он используется крайне редко, но иногда другого решения не найти.
 * 
 * (Это используется в очень специфических случаях, например, 
 * когда мы получаем код с сервера для динамической компиляции функции из шаблона, в сложных веб-приложениях.)
 */

 let sum = new Function('a', 'b', 'return a + b'); // функция создаётся полностью «на лету» из строки, переданной во время выполнения.

 // new Function позволяет превратить любую строку в функцию. 

/**
 * огда функция создаётся с использованием new Function, в её [[Environment]] записывается ссылка не на внешнее лексическое окружение, 
 * в котором она была создана, а на глобальное. Поэтому такая функция имеет доступ только к глобальным переменным.
 */

function foo(){
    let phrase = 'Hello';

    const alertFunc = new Function('alert(phrase)');

    return alertFunc;
}

foo()(); //ReferenceError: phrase is not defined

/**
 * Функции, объявленные через new Function, имеют [[Environment]], 
 * ссылающийся на глобальное лексическое окружение, а не на родительское. 
 * Поэтому они не могут использовать внешние локальные переменные. 
 * Но это очень хорошо, потому что страхует нас от ошибок. 
 * Переданные явно параметры – гораздо лучшее архитектурное решение, которое не вызывает проблем у минификаторов.
 */